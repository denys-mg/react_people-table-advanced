{"version":3,"sources":["components/Navbar/Navbar.tsx","App.tsx","pages/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","utils/searchHelper.ts","components/SearchLink/SearchLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeopleFilters/PeopleFilters.tsx","pages/PeoplePage/PeoplePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","Root.tsx","index.tsx"],"names":["Navbar","getActiveLinkClass","isActive","cn","className","role","to","App","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","ok","Error","json","PersonLink","person","name","sex","born","died","slug","fatherName","motherName","father","mother","urlSlug","useParams","getClassByGender","gender","getParentInfo","parentName","personFromData","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","TABLE_COLUMNS","PeopleTable","people","defineSortParams","columnKey","isSortParamTheSame","get","sortParam","orderParam","sort","order","keys","map","columnValue","centuries","sixteen","seventeen","eighteen","nineteen","twelve","PeopleFilters","setSearchParams","sexParam","queryParam","centuriesParam","getAll","type","placeholder","onChange","event","query","target","centuryKey","centuryValue","includes","filter","cent","length","SEARCH_OPTIONS","PeoplePage","useState","peopleFromServer","setPeopleFromServer","filteredPeople","setFilteredPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","isDataSuccessfulyFetched","preparePeopleData","preparedPeople","find","useEffect","catch","finally","fromEntries","sortBy","a","b","localeCompare","reverse","toLowerCase","filteringCenturies","peopleCentury","Math","ceil","applyFiltering","NotFoundPage","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.55dec11e.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  const getActiveLinkClass = ({ isActive }: { isActive: boolean }) => {\n    return cn('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    });\n  };\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={getActiveLinkClass}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={getActiveLinkClass}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\n\nimport { Navbar } from './components/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Something went wrong');\n      }\n\n      return response.json();\n    });\n}\n","import cn from 'classnames';\nimport { Link, useParams } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    slug,\n    fatherName,\n    motherName,\n    father,\n    mother,\n  } = person;\n\n  const { slug: urlSlug } = useParams();\n\n  const getClassByGender = (gender: string) => {\n    return cn({\n      'has-text-danger': gender === 'f',\n    });\n  };\n\n  const getParentInfo = (\n    parentName: string | null,\n    personFromData: Person | undefined,\n  ) => {\n    if (parentName && personFromData) {\n      return (\n        <Link\n          to={`${personFromData.slug}`}\n          className={getClassByGender(personFromData.sex)}\n        >\n          {parentName}\n        </Link>\n      );\n    }\n\n    if (parentName) {\n      return `${parentName}`;\n    }\n\n    return '-';\n  };\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({\n        'has-background-warning': slug === urlSlug,\n      })}\n    >\n      <td>\n        <Link\n          to={`${slug}`}\n          className={getClassByGender(sex)}\n        >\n          {name}\n        </Link>\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n\n      <td>\n        {getParentInfo(motherName, mother)}\n      </td>\n\n      <td>\n        {getParentInfo(fatherName, father)}\n      </td>\n    </tr>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams,\n): string {\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../../utils/searchHelper';\n\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\nexport const SearchLink: React.FC<Props> = ({\n  children,\n  params,\n  ...props\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props}\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\nimport { SearchLink } from '../SearchLink';\n\ntype Column = {\n  [key: string]: string,\n};\n\nconst TABLE_COLUMNS: Column = {\n  name: 'Name',\n  sex: 'Sex',\n  born: 'Born',\n  died: 'Died',\n};\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const [searchParams] = useSearchParams();\n\n  const defineSortParams = (columnKey: string) => {\n    const isSortParamTheSame = searchParams.get('sort') === columnKey;\n    const sortParam = searchParams.get('order') ? null : columnKey;\n    const orderParam = searchParams.get('order') ? null : 'desc';\n\n    const newSort = !isSortParamTheSame\n      ? columnKey\n      : sortParam;\n    const newOrder = !isSortParamTheSame\n      ? null\n      : orderParam;\n\n    return { sort: newSort, order: newOrder };\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {Object.keys(TABLE_COLUMNS).map(columnKey => {\n            const columnValue = TABLE_COLUMNS[columnKey];\n\n            return (\n              <th key={columnKey}>\n                <span className=\"is-flex is-flex-wrap-nowrap\">\n                  {columnValue}\n                  <SearchLink\n                    params={defineSortParams(columnKey)}\n                  >\n                    <span className=\"icon\">\n                      <i className={cn('fas fa-sort', {\n                        'fa-sort-up': searchParams.get('sort') === columnKey\n                          && !searchParams.get('order'),\n                        'fa-sort-down': searchParams.get('sort') === columnKey\n                          && !!searchParams.get('order'),\n                      })}\n                      />\n                    </span>\n                  </SearchLink>\n                </span>\n              </th>\n            );\n          })}\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonLink person={person} key={person.slug} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import cn from 'classnames';\nimport { Link, useSearchParams } from 'react-router-dom';\nimport { SearchLink } from '../SearchLink';\nimport { getSearchWith } from '../../utils/searchHelper';\n\ntype Century = {\n  [key: string]: string,\n};\n\nconst centuries: Century = {\n  sixteen: '16',\n  seventeen: '17',\n  eighteen: '18',\n  nineteen: '19',\n  twelve: '20',\n};\n\nexport const PeopleFilters: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const sexParam = searchParams.get('sex');\n  const queryParam = searchParams.get('query') || '';\n  const centuriesParam = searchParams.getAll('centuries') || [];\n\n  const handleQueryTyping = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchParams(\n      getSearchWith(searchParams, { query: event.target.value || null }),\n    );\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={cn({\n            'is-active': sexParam === null,\n          })}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n        <SearchLink\n          className={cn({\n            'is-active': sexParam === 'm',\n          })}\n          params={{ sex: 'm' }}\n        >\n          Male\n        </SearchLink>\n        <SearchLink\n          className={cn({\n            'is-active': sexParam === 'f',\n          })}\n          params={{ sex: 'f' }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            value={queryParam}\n            onChange={handleQueryTyping}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {Object.keys(centuries).map(centuryKey => {\n              const centuryValue = centuries[centuryKey];\n\n              return (\n                <SearchLink\n                  key={centuryKey}\n                  className={cn('button mr-1', {\n                    'is-info': centuriesParam.includes(centuryValue),\n                  })}\n                  params={{\n                    centuries: centuriesParam.includes(centuryValue)\n                      ? centuriesParam.filter(cent => cent !== centuryValue)\n                      : [...centuriesParam, centuryValue],\n                  }}\n                  data-cy=\"century\"\n                >\n                  {centuryValue}\n                </SearchLink>\n              );\n            })}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <SearchLink\n              className={cn('button is-success', {\n                'is-outlined': centuriesParam.length,\n              })}\n              params={{ centuries: null }}\n              data-cy=\"centuryALL\"\n            >\n              All\n            </SearchLink>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <Link\n          to=\"#/people\"\n          className=\"button is-link is-outlined is-fullwidth\"\n        >\n          Reset all filters\n        </Link>\n      </div>\n    </nav>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../../components/PeopleTable';\nimport { PeopleFilters } from '../../components/PeopleFilters';\n\nconst SEARCH_OPTIONS = {\n  sort: 'sort',\n  order: 'order',\n  sex: 'sex',\n  query: 'query',\n  centuries: 'centuries',\n};\n\nexport const PeoplePage = () => {\n  const [\n    peopleFromServer,\n    setPeopleFromServer,\n  ] = useState<Person[] | null>(null);\n  const [filteredPeople, setFilteredPeople] = useState<Person[]>([]);\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const [searchParams] = useSearchParams();\n\n  const isDataSuccessfulyFetched = !isLoading\n    && !errorMessage && peopleFromServer;\n\n  const applyFiltering = () => {\n    let people = peopleFromServer || [];\n    const params = Object.fromEntries(searchParams.entries());\n\n    Object.keys(params)\n      .forEach(key => {\n        switch (key) {\n          case SEARCH_OPTIONS.sort: {\n            const sortBy = searchParams.get('sort');\n\n            if (sortBy) {\n              if (sortBy === 'born' || sortBy === 'died') {\n                people = [...people].sort((a, b) => {\n                  return a[sortBy] - b[sortBy];\n                });\n              }\n\n              if (sortBy === 'name' || sortBy === 'sex') {\n                people = [...people].sort((a, b) => {\n                  return a[sortBy].localeCompare(b[sortBy]);\n                });\n              }\n            }\n\n            break;\n          }\n\n          case SEARCH_OPTIONS.order:\n            people = [...people].reverse();\n            break;\n          case SEARCH_OPTIONS.sex:\n            people = people.filter(({ sex }) => sex === params[key]);\n            break;\n          case SEARCH_OPTIONS.query:\n            people = people.filter(({ name, fatherName, motherName }) => {\n              const namesWhereSearch = name\n                + (fatherName || '') + (motherName || '');\n\n              return namesWhereSearch.toLowerCase()\n                .includes(params[key].toLowerCase());\n            });\n            break;\n          case SEARCH_OPTIONS.centuries: {\n            const filteringCenturies = searchParams.getAll(key);\n\n            people = people.filter(({ born }) => {\n              const peopleCentury = Math.ceil(born / 100).toString();\n\n              return filteringCenturies.includes(peopleCentury);\n            });\n            break;\n          }\n\n          default:\n            break;\n        }\n      });\n\n    setFilteredPeople(people);\n  };\n\n  const preparePeopleData = (people: Person[]) => {\n    const preparedPeople = people.map(person => {\n      let mother;\n      let father;\n\n      if (person.motherName) {\n        mother = people.find(({ name }) => person.motherName === name);\n      }\n\n      if (person.fatherName) {\n        father = people.find(({ name }) => person.fatherName === name);\n      }\n\n      return { ...person, mother, father };\n    });\n\n    setPeopleFromServer(preparedPeople);\n  };\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then(preparePeopleData)\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  useEffect(() => {\n    applyFiltering();\n  }, [searchParams, peopleFromServer]);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {isDataSuccessfulyFetched && <PeopleFilters />}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {\n                errorMessage && (\n                  <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                    {errorMessage}\n                  </p>\n                )\n              }\n\n              {\n                isDataSuccessfulyFetched && (\n                  <>\n                    {!peopleFromServer.length && (\n                      <p data-cy=\"noPeopleMessage\">\n                        There are no people on the server\n                      </p>\n                    )}\n\n                    {peopleFromServer.length > 0\n                      && filteredPeople.length === 0 && (\n                      <p>\n                        There are no people matching the current search criteria\n                      </p>\n                    )}\n\n                    {peopleFromServer.length > 0\n                      && filteredPeople.length > 0 && (\n                      <PeopleTable people={filteredPeople} />\n                    )}\n                  </>\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\n\nimport { App } from './App';\nimport { HomePage } from './pages/HomePage';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\nexport const Root: React.FC = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFoundPage />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}